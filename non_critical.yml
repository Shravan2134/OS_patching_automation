---
- name: Update Non-Critical Patches and Notify
  hosts: host1
  become: yes
  vars:
    recipient_email: "shravans1302@gmail.com"
  tasks:
    - name: Ensure the directory exists
      file:
        path: /home/adminuser/non_critical_patching
        state: directory
        mode: '0755'

    - name: Get list of upgradable packages excluding security updates
      shell: "apt list --upgradable 2>/dev/null | grep -v security | grep -v 'Listing...' | awk '{print $1}' | awk -F '/' '{print $1}'"
      register: non_critical_patches

    - name: Store the list of non-critical patches in a file
      copy:
        content: "{{ non_critical_patches.stdout }}"
        dest: "/home/adminuser/non_critical_patching/patching_list.txt"
        mode: '0644'

    - name: Fetch the non-critical patches file to the controller machine
      fetch:
        src: /home/adminuser/non_critical_patching/patching_list.txt
        dest: "./patching_list_{{ inventory_hostname }}.txt"
        flat: yes

    - name: Read services from the host machine
      ansible.builtin.slurp:
        src: "/home/adminuser/non_critical_patching/patching_list.txt"
      register: required_patchings

    - name: Decode and split the content
      set_fact:
        requirements: "{{ required_patchings.content | b64decode | split('\n') | select('string') | list }}"

    - name: Debug list of services to start
      ansible.builtin.debug:
        msg: "Patches to be done: {{ requirements }}" 

    - name: Start inactive services listed in requirement
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
      loop: "{{ requirements }}"
      ignore_errors: yes  # Optional: Avoid failure if a service is not valid
